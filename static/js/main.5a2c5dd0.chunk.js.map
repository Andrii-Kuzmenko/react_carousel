{"version":3,"sources":["components/Image/Image.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Image","alt","props","image","replace","this","itemWidth","src","style","width","React","Component","Carousel","state","shiftWidth","getMaxWidth","images","length","getFrameWidth","frameSize","getStepWidth","step","isGetMaxLength","mooveRight","setState","prevState","mooveLeft","animationDuration","className","type","onClick","disabled","map","transform","transitionDuration","transitionProperty","App","handleChange","target","name","value","action","method","min","onChange","event","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a2c5dd0.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  image: string,\n  itemWidth: number,\n};\n\nexport class Image extends React.Component<Props, {}> {\n  alt = this.props.image.replace(/[^0-9]/g, '');\n\n  render() {\n    const { image, itemWidth } = this.props;\n\n    return (\n      <img\n        src={image}\n        style={{ width: `${itemWidth}px` }}\n        alt={`${this.alt}`}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport './Carousel.scss';\nimport { Image } from '../Image';\n\ntype Props = {\n  images: string[];\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n};\n\ntype State = {\n  shiftWidth: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    shiftWidth: 0,\n  };\n\n  getMaxWidth = () => this.props.itemWidth * this.props.images.length;\n\n  getFrameWidth = () => this.props.itemWidth * this.props.frameSize;\n\n  getStepWidth = () => this.props.itemWidth * this.props.step;\n\n  isGetMaxLength = () => this.state.shiftWidth + this.getFrameWidth();\n\n  mooveRight = () => {\n    if ((this.isGetMaxLength() + this.getStepWidth()) > this.getMaxWidth()) {\n      this.setState({\n        shiftWidth: this.getMaxWidth() - this.getFrameWidth(),\n      });\n    } else {\n      this.setState(prevState => ({\n        shiftWidth: prevState.shiftWidth + this.getStepWidth(),\n      }));\n    }\n  };\n\n  mooveLeft = () => {\n    if ((this.state.shiftWidth - this.getStepWidth()) < 0) {\n      this.setState({ shiftWidth: 0 });\n    } else {\n      this.setState(prevState => ({\n        shiftWidth: prevState.shiftWidth - this.getStepWidth(),\n      }));\n    }\n  };\n\n  render() {\n    const {\n      images,\n      animationDuration,\n      itemWidth,\n    } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          className=\"Carousel__buttonLeft\"\n          type=\"button\"\n          onClick={this.mooveLeft}\n          disabled={this.state.shiftWidth === 0}\n        >\n          Prev\n        </button>\n\n        <ul className=\"Carousel__list\" style={{ width: `${this.getFrameWidth()}px` }}>\n          {images.map(image => (\n            <li\n              key={image}\n              style={{\n                transform: `translate(${-this.state.shiftWidth}px)`,\n                transitionDuration: `${animationDuration}ms`,\n                transitionProperty: 'transform',\n              }}\n            >\n              <Image image={image} itemWidth={itemWidth} />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          className=\"Carousel__buttonRight\"\n          type=\"button\"\n          onClick={this.mooveRight}\n          disabled={this.isGetMaxLength() === this.getMaxWidth()}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  handleChange = (target: EventTarget & HTMLInputElement) => {\n    const { name, value } = target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value,\n\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>{`Carousel with ${images.length} images`}</h1>\n\n          <Carousel\n            images={images}\n            step={step}\n            frameSize={frameSize}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n          />\n        </div>\n\n        <form action=\"#\" method=\"get\" className=\"form\">\n          <label>\n            <input\n              type=\"number\"\n              name=\"step\"\n              min={1}\n              value={step}\n              onChange={(event) => {\n                this.handleChange(event.target);\n              }}\n            />\n            <span> - step</span>\n          </label>\n\n          <label>\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              min={1}\n              value={frameSize}\n              onChange={(event) => {\n                this.handleChange(event.target);\n              }}\n            />\n            <span> - frameSize</span>\n          </label>\n\n          <label>\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              min={1}\n              value={itemWidth}\n              onChange={(event) => {\n                this.handleChange(event.target);\n              }}\n            />\n            <span> - itemWidth</span>\n          </label>\n\n          <label>\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              min={0}\n              value={animationDuration}\n              onChange={(event) => {\n                this.handleChange(event.target);\n              }}\n            />\n            <span> - animationDuration</span>\n          </label>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}